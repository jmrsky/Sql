-- I found a lot of interesting query ideas on HackerRank and various coding forums I indulge in. 
Here are a few join and aggregation ideas since added to my skillset!


--Pull a list of bookings on the day of 2012-09-14 which will cost the member (or guest) more than $30. 
Guests have different costs to members (the listed costs are per half-hour 'slot'), and the guest user is always ID 0.
Include the facility name, member's name formatted as a single column, and the cost.
Order descending by cost WITHOUT subqueries.


select m.firstname || ' ' || m.surname as member, 
facs.name as facility, 
case when m.memid = 0 then bks.slots*facs.guestcost else bks.slots*facs.membercost end as cost
 from cd.members m
 inner join cd.bookings b on mems.memid = b.memid 
inner join cd.facilities f on b.facid = f.facid 

where b.starttime >= '2012-09-14' and b.starttime < '2012-09-15'
 and ( (m.memid = 0 and b.slots*f.guestcost > 30)
 or (m.memid != 0 and b.slots*facs.membercost > 30) ) order by cost desc;
 
 
-- Retrieve all roles from a DB
 
 declare @dbs table (dbname sysname) 
create table #all_roles (db sysname, [user] varchar(200), role varchar(200)) 
declare @Next sysname 
insert into @dbs 
select name from sys.databases 
select top 1 @Next = dbname from @dbs order by dbname 
while (@@rowcount<>0) 
begin 
	exec('use [' + @Next + '] 
	INSERT INTO #all_roles 
	SELECT''' + @Next + ''' as db,  us.name as [user], dp.name as [role] 
	FROM sys.sysusers us right  
	JOIN  sys.database_role_members rm ON us.uid = rm.member_principal_id 
	JOIN sys.database_principals dp ON rm.role_principal_id =  dp.principal_id 
	ORDER BY us.name') 
	delete @dbs where dbname = @Next 
	select top 1 @Next = dbname from @dbs order by dbname 
end 
 
select * from #all_roles 
order by db, [user], [role] 
 
drop table #all_roles



--Retrieve all users from a DB (Credit to Shiva Challa)

-- Author: Shiva Challa (http://challa.info) 
USE MASTER 
GO 
BEGIN 
DECLARE @SQLVerNo INT; 
SET @SQLVerNo = cast(substring(CAST(Serverproperty('ProductVersion') AS VARCHAR(50)) ,0,charindex('.',CAST(Serverproperty('ProductVersion') AS VARCHAR(50)) ,0)) as int); 
 
IF @SQLVerNo >= 9  
    IF EXISTS (SELECT TOP 1 * 
               FROM Tempdb.sys.objects (nolock) 
               WHERE name LIKE '#TUser%') 
        DROP TABLE #TUser 
ELSE 
IF @SQLVerNo = 8 
BEGIN 
    IF EXISTS (SELECT TOP 1 * 
               FROM Tempdb.dbo.sysobjects (nolock) 
               WHERE name LIKE '#TUser%') 
        DROP TABLE #TUser 
END 
 
CREATE TABLE #TUser ( 
    ServerName    varchar(256), 
    DBName        SYSNAME, 
    [Name]        SYSNAME, 
    GroupName     SYSNAME NULL, 
    LoginName     SYSNAME NULL, 
    default_database_name  SYSNAME NULL, 
    default_schema_name    VARCHAR(256) NULL, 
    Principal_id  INT, 
    [sid]         VARBINARY(85)) 
 
IF @SQLVerNo = 8 
BEGIN 
	INSERT INTO #TUser 
	EXEC sp_MSForEachdb 
	' 
	 SELECT  
	   @@SERVERNAME, 
	   ''?'' as DBName, 
	   u.name As UserName, 
	   CASE WHEN (r.uid IS NULL) THEN ''public'' ELSE r.name END AS GroupName, 
	   l.name AS LoginName, 
	   NULL AS Default_db_Name, 
	   NULL as default_Schema_name, 
	   u.uid, 
	   u.sid 
	 FROM [?].dbo.sysUsers u 
	   LEFT JOIN ([?].dbo.sysMembers m  
	   JOIN [?].dbo.sysUsers r 
	   ON m.groupuid = r.uid) 
	   ON m.memberuid = u.uid 
	   LEFT JOIN dbo.sysLogins l 
	   ON u.sid = l.sid 
	 WHERE u.islogin = 1 OR u.isntname = 1 OR u.isntgroup = 1 
	   /*and u.name like ''tester''*/ 
	 ORDER BY u.name 
	' 
END 
 
ELSE  
IF @SQLVerNo >= 9 
BEGIN 
	INSERT INTO #TUser 
	EXEC sp_MSForEachdb 
	' 
	 SELECT  
	   @@SERVERNAME, 
	   ''?'', 
	   u.name, 
	   CASE WHEN (r.principal_id IS NULL) THEN ''public'' ELSE r.name END GroupName, 
	   l.name LoginName, 
	   l.default_database_name, 
	   u.default_schema_name, 
	   u.principal_id, 
	   u.sid 
	 FROM [?].sys.database_principals u 
	   LEFT JOIN ([?].sys.database_role_members m 
	   JOIN [?].sys.database_principals r  
	   ON m.role_principal_id = r.principal_id) 
	   ON m.member_principal_id = u.principal_id 
	   LEFT JOIN [?].sys.server_principals l 
	   ON u.sid = l.sid 
	 WHERE u.TYPE <> ''R'' 
	   /*and u.name like ''tester''*/ 
	 order by u.name 
	 ' 
END 
 
SELECT * 
FROM #TUser 
 --WHERE DBName not like '%_UAT' 
 --AND name not like 'HEALTH\%' 
 --AND LoginName is null 
 --AND  name not in ('INFORMATION_SCHEMA', 'guest', 'sys', 'NT AUTHORITY\NETWORK SERVICE') 
ORDER BY DBName, 
 [name], 
 GroupName 
 
 
DROP TABLE #TUser 
END 
List all Usernames, Roles for all the databases. â€“ SQLServerCentral

14. Get all triggers

SELECT  
     sysobjects.name AS trigger_name  
    ,USER_NAME(sysobjects.uid) AS trigger_owner  
    ,s.name AS table_schema  
    ,OBJECT_NAME(parent_obj) AS table_name  
    ,OBJECTPROPERTY( id, 'ExecIsUpdateTrigger') AS isupdate  
    ,OBJECTPROPERTY( id, 'ExecIsDeleteTrigger') AS isdelete  
    ,OBJECTPROPERTY( id, 'ExecIsInsertTrigger') AS isinsert  
    ,OBJECTPROPERTY( id, 'ExecIsAfterTrigger') AS isafter  
    ,OBJECTPROPERTY( id, 'ExecIsInsteadOfTrigger') AS isinsteadof  
    ,OBJECTPROPERTY(id, 'ExecIsTriggerDisabled') AS [disabled]  
FROM sysobjects  
 
INNER JOIN sysusers  
    ON sysobjects.uid = sysusers.uid  
 
INNER JOIN sys.tables t  
    ON sysobjects.parent_obj = t.object_id  
 
INNER JOIN sys.schemas s  
    ON t.schema_id = s.schema_id  
 
WHERE sysobjects.type = 'TR'  
